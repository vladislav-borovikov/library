{"mappings":"uoBACO,IAkBIA,EAAS,CAACC,EAAO,KAC1BC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,CAACC,EAAIC,IAGrDD,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,KAGP,G,IChCL,IAAAG,EAAAC,EAAA,S,0BAIA,MAAMC,EAAOC,SAASC,eAAe,uBAC/BC,EAAcF,SAASC,eAAe,iBAE5CF,EAAKI,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAIN,IAFiBN,EAAKO,QAAQC,UAEf,CACb,MACEC,UAAUC,kBACRA,EAAiBC,cACjBA,EAAaC,iBACbA,EAAgBC,qBAChBA,IAEAR,EAAMS,cAEV,IAAIC,EAAY,CACdrB,IAAI,EAAAI,EAAAkB,QAAO,GACXC,iBAAkBP,EAAkBQ,MACpCC,YAAaR,EAAcO,MAC3BE,eAAgBR,EAAiBM,MAEjCG,cAAeR,EAAqBK,MACpCI,MAAO,IAGLC,GAAU,EAAAC,EAAAC,cAEd,GAAIF,EACFA,EAAQG,KAAKX,IACb,EAAAS,EAAAG,aAAYJ,OACP,CACL,IAAIK,EAAW,GACfA,EAASF,KAAKX,IACd,EAAAS,EAAAG,aAAYC,E,CAGd,IAAIC,EAAa,IAAI,EAAAC,EAAAC,SAAOhB,GAC5BZ,EAAY6B,mBAAmB,YAAaH,EAAWI,aAEvDjC,EAAKkC,O","sources":["node_modules/nanoid/index.browser.js","src/js/athors/authorsCreation.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from 'nanoid';\nimport Author from '../halpers/Author';\nimport { getLibrary, postLibrary } from '../api/workWithLocalStorage';\n\nconst form = document.getElementById('authorsCreationForm');\nconst authorTable = document.getElementById('tableOfAuthor');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const authorId = form.dataset.id_author;\n\n  if (!authorId) {\n    const {\n      elements: {\n        formLastNameInput,\n        formNameInput,\n        formSurnameInput,\n        formDateOfBirthInput,\n      },\n    } = event.currentTarget;\n\n    let newAuthor = {\n      id: nanoid(5),\n      author_last_name: formLastNameInput.value,\n      author_name: formNameInput.value,\n      author_surname: formSurnameInput.value,\n      // author: `${formLastNameInput.value} ${formNameInput.value} ${formSurnameInput.value}`,\n      date_of_birth: formDateOfBirthInput.value,\n      books: [],\n    };\n\n    let library = getLibrary();\n\n    if (library) {\n      library.push(newAuthor);\n      postLibrary(library);\n    } else {\n      let newArrey = [];\n      newArrey.push(newAuthor);\n      postLibrary(newArrey);\n    }\n\n    let authorItem = new Author(newAuthor);\n    authorTable.insertAdjacentHTML('beforeend', authorItem.getAuthor());\n\n    form.reset();\n  }\n}\n"],"names":["$cf399e049a9c4d34$export$ac4959f4f1338dfc","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","$hN3me","parcelRequire","$fe5d21e2b848c887$var$form","document","getElementById","$fe5d21e2b848c887$var$authorTable","addEventListener","event","preventDefault","dataset","id_author","elements","formLastNameInput","formNameInput","formSurnameInput","formDateOfBirthInput","currentTarget","newAuthor","nanoid","author_last_name","value","author_name","author_surname","date_of_birth","books","library","$8JP4i","getLibrary","push","postLibrary","newArrey","authorItem","$fjEk7","default","insertAdjacentHTML","getAuthor","reset"],"version":3,"file":"index.e45ed826.js.map"}